{"version":3,"sources":["serviceWorker.ts","state/github.ts","components/Flex.tsx","icons.tsx","components/Tree.tsx","state/util.ts","components/Editor.tsx","components/Diff.tsx","components/Pr.tsx","components/App.tsx","components/Info.tsx","index.tsx","components/Router.tsx"],"names":["Boolean","window","location","hostname","match","client","Octokit","usePrState","owner","repo","pr","useState","data","setData","useEffect","number","a","async","key","val","localStorage","getItem","JSON","parse","loadPrState","state","setItem","stringify","loadPrStateCached","then","loadRoot","ref","getChildren","children","type","path","name","repos","getContents","r","contents","Promise","all","map","c","getContentCached","getContent","content","headers","accept","pulls","get","pull_number","pull","compareCommits","base","login","head","diff","diffFiles","files","f","additions","changes","deletions","filename","url","raw_url","sha","status","root","title","description","body","commits","message","commit","author","avatarUrl","avatar_url","Flex","Child","flex","className","style","Container","display","Right","width","height","viewBox","version","aria-hidden","fill","fillRule","d","Down","File","Icon","open","TreeSelectedLine","TreeItem","selected","changedFiles","onSelect","toggle","setToggle","useToggle","toggleOpen","active","changed","find","startsWith","includes","onClick","e","stopPropagation","length","sort","el","Tree","b","toLowerCase","languages","js","ts","md","rb","py","json","yml","yaml","Dockerfile","DiffEditor","original","modified","ext","split","pop","language","options","readOnly","theme","EditorHeader","Diff","run","useDiff","PrBody","target","rel","href","App","setSelected","prState","Info","ReactDOM","render","pathname","filter","s","console","log","Number","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0LAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mCCfAC,EAAS,I,OAAIC,GAyDZ,SAASC,EAAWC,EAAeC,EAAcC,GAAa,IAAD,EAC1CC,mBAAyB,MADiB,mBAC3DC,EAD2D,KACrDC,EADqD,KAKlE,OAHAC,qBAAU,YAuFZ,SACEN,EACAC,EACAM,GAHF,mBAAAC,EAAAC,OAAA,mDAKkB,IACVC,EANR,UAMiBV,EANjB,YAM0BC,EAN1B,YAMkCM,EANlC,YAKkB,OAEVI,EAAMC,aAAaC,QAAQH,IAPnC,yCASWI,KAAKC,MAAMJ,IATtB,yBAAAH,EAAA,MAYsBQ,EAAYhB,EAAOC,EAAMM,IAZ/C,cAYQU,EAZR,OAaEL,aAAaM,QAAQR,EAAKI,KAAKK,UAAUF,IAb3C,kBAcSA,GAdT,uCAtFIG,CAAkBpB,EAAOC,EAAMC,GAAImB,KAAKhB,KACvC,CAACL,EAAOC,EAAMC,IACVE,EAkCT,SAAekB,EACbtB,EACAC,EACAsB,GAHF,eAAAf,EAAAC,OAAA,kEAAAD,EAAA,MAKyBgB,EAAYxB,EAAOC,EAAM,GAAIsB,IALtD,cAKQE,EALR,yBAMS,CACLC,KAAM,SACNC,KAAM,IACNC,KAAM,IACNH,aAVJ,qCAcA,SAAeD,EACbxB,EACAC,EACA0B,EACAJ,GAJF,eAAAf,EAAAC,OAAA,kEAAAD,EAAA,MAM0BX,EAAOgC,MAC5BC,YAAY,CACX9B,QACAC,OACAsB,MACAI,SAEDN,MAAK,SAAAU,GAAC,OAAIA,EAAE3B,SAbjB,cAMQ4B,EANR,yBAcSC,QAAQC,IACbF,EAASG,KACP,SAAOC,GAAP,SAAA5B,EAAAC,OAAA,mDACiB,QAAX2B,EAAEV,KADR,4BAIYU,EAAER,KAJd,KAKYQ,EAAET,KALd,WAAAnB,EAAA,MAMsBgB,EAAYxB,EAAOC,EAAMmC,EAAET,KAAMJ,IANvD,6CAGMG,KAAM,SACNE,KAJN,KAKMD,KALN,KAMMF,SANN,uCASS,CACLC,KAAM,OACNE,KAAMQ,EAAER,KACRD,KAAMS,EAAET,KACRF,SAAU,KAbd,0CAhBN,qCAqDA,SAAeY,EACbrC,EACAC,EACAsB,EACAI,GAJF,mBAAAnB,EAAAC,OAAA,mDAMkB,IACVC,EAPR,UAOiBV,EAPjB,YAO0BC,EAP1B,YAOkCsB,EAPlC,YAOyCI,EAPzC,YAMkB,OAEVhB,EAAMC,aAAaC,QAAQH,IARnC,yCAUWC,GAVX,yBAAAH,EAAA,MAawB8B,EAAWtC,EAAOC,EAAMsB,EAAKI,IAbrD,cAaQY,EAbR,OAcE3B,aAAaM,QAAQR,EAAK6B,GAd5B,kBAeSA,GAfT,sCAkBA,SAASD,EAAWtC,EAAeC,EAAcsB,EAAaI,GAC5D,OAAO9B,EAAOgC,MACXC,YAAY,CACX9B,QACAC,OACAsB,MACAI,OACAa,QAAS,CACPC,OAAQ,mCAGXpB,MAAK,SAAAU,GAAC,OAAIA,EAAE3B,QAGjB,SAAeY,EACbhB,EACAC,EACAM,GAHF,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKqBX,EAAO6C,MACvBC,IAAI,CACH3C,QACAC,OACA2C,YAAarC,IAEdc,MAAK,SAAAU,GAAC,OAAIA,EAAE3B,SAXjB,cAKQyC,EALR,kBAAArC,EAAA,MAYqBX,EAAOgC,MACvBiB,eAAe,CACd9C,QACAC,OACA8C,KAAK,GAAD,OAAKF,EAAKE,KAAK9C,KAAKD,MAAMgD,MAA1B,YAAmCH,EAAKE,KAAKxB,KACjD0B,KAAK,GAAD,OAAKJ,EAAKI,KAAKhD,KAAKD,MAAMgD,MAA1B,YAAmCH,EAAKI,KAAK1B,OAElDF,MAAK,SAAAU,GAAC,OAAIA,EAAE3B,SAnBjB,cAYQ8C,EAZR,OAoBQC,EAAYD,EAAKE,MAAMjB,KAAI,SAAAkB,GAAC,MAAK,CACrCC,UAAWD,EAAEC,UACbC,QAASF,EAAEE,QACXC,UAAWH,EAAEG,UACbC,SAAUJ,EAAEI,SACZC,IAAKL,EAAEM,QACPC,IAAKP,EAAEO,IACPC,OAAQR,EAAEQ,WA3Bd,WAAArD,EAAA,MA6BqBc,EAASuB,EAAKI,KAAKhD,KAAKD,MAAMgD,MAAOH,EAAKI,KAAKhD,KAAK2B,KAAMiB,EAAKI,KAAK1B,MA7BzF,cA6BQuC,EA7BR,yBA+BS,CACLC,MAAOlB,EAAKkB,MACZC,YAAanB,EAAKoB,KAClBhD,MAAO4B,EAAK5B,MACZV,OAAQsC,EAAKtC,OACbP,QACAC,OACA6D,OACAf,KAAM,CACJ9C,KAAM,CACJD,MAAO6C,EAAKE,KAAK9C,KAAKD,MAAMgD,MAC5BpB,KAAMiB,EAAKE,KAAK9C,KAAK2B,MAEvBL,IAAKsB,EAAKE,KAAKxB,IACfqC,IAAKf,EAAKE,KAAKa,KAEjBX,KAAM,CACJhD,KAAM,CACJD,MAAO6C,EAAKI,KAAKhD,KAAKD,MAAMgD,MAC5BpB,KAAMiB,EAAKI,KAAKhD,KAAK2B,MAEvBL,IAAKsB,EAAKI,KAAK1B,IACfqC,IAAKf,EAAKI,KAAKW,KAEjBT,YACAe,QAAShB,EAAKgB,QAAQ/B,KAAI,SAAAC,GAAC,MAAK,CAC9BwB,IAAKxB,EAAEwB,IACPO,QAAS/B,EAAEgC,OAAOD,QAClBE,OAAQ,CACNrB,MAAOZ,EAAEiC,OAAOrB,MAChBsB,UAAWlC,EAAEiC,OAAOE,kBA7D5B,sCCtKO,IAAMC,EAAO,CAClBC,MAjBK,YAQH,IAPFC,EAOC,EAPDA,KACAC,EAMC,EANDA,UACAlD,EAKC,EALDA,SAMA,OACE,yBAAKkD,UAAS,qBAAgBA,GAAaC,MAAO,CAAEF,SACjDjD,IAOLoD,UAhCK,YAMH,IALFpD,EAKC,EALDA,SACAkD,EAIC,EAJDA,UAKA,OACE,yBAAKA,UAAS,yBAAoBA,GAAaC,MAAO,CAAEE,QAAS,SAC9DrD,KCTA,SAASsD,IACd,OACE,yBACEC,MAAM,KACNC,OAAO,KACPN,UAAU,gCACVO,QAAQ,WACRC,QAAQ,MACRC,cAAY,OACZC,KAAK,gBAEL,0BACEC,SAAS,UACTC,EAAE,gDAMH,SAASC,IACd,OACE,yBACER,MAAM,KACNC,OAAO,KACPN,UAAU,+BACVO,QAAQ,YACRC,QAAQ,MACRC,cAAY,OACZC,KAAK,gBAEL,0BACEC,SAAS,UACTC,EAAE,iDAMH,SAASE,IACd,OACE,yBACET,MAAM,KACNC,OAAO,KACPN,UAAU,uBACVO,QAAQ,YACRC,QAAQ,MACRC,cAAY,OACZC,KAAK,gBAEL,0BACEC,SAAS,UACTC,EAAE,yJ,MCxCV,SAASG,EAAT,GAA2E,IAA3DhE,EAA0D,EAA1DA,KAAMiE,EAAoD,EAApDA,KACpB,MAAa,SAATjE,EACK,kBAAC+D,EAAD,MAEHE,EACK,kBAACH,EAAD,MAEA,kBAACT,EAAD,MAKb,SAASa,IACP,OAAO,yBAAKjB,UAAU,sBAGxB,SAASkB,EAAT,GAQW,IAPTjE,EAOQ,EAPRA,KACAH,EAMQ,EANRA,SACAC,EAKQ,EALRA,KACAC,EAIQ,EAJRA,KACAmE,EAGQ,EAHRA,SACAC,EAEQ,EAFRA,aACAC,EACQ,EADRA,SACQ,ECnCH,WAA6C,IAAD,EACrB7F,oBAAS,GADY,mBAC1C8F,EAD0C,KAClCC,EADkC,KAKjD,MAAO,CAACD,EAHR,WACEC,GAAWD,KDiCcE,GADnB,mBACDR,EADC,KACKS,EADL,KAEFC,EAASP,IAAanE,EAEtB2E,EACK,WAAT5E,EACIqE,EAAaQ,MAAK,SAAAlD,GAAC,OAAIA,EAAEmD,WAAW7E,MACpCoE,EAAaU,SAAS9E,GAQ5B,OACE,wBACE+E,QARJ,SAAqBC,GACnBA,EAAEC,kBACW,WAATlF,GAAmB0E,IACV,SAAT1E,GAAiBsE,EAASrE,IAM5BgD,UAAS,sBACP0B,EAAS,2BAA6B,KAGvCA,GAAU,kBAACT,EAAD,MACX,0BAAMjB,UAAW2B,EAAU,0BAA4B,IACrD,kBAACZ,EAAD,CAAMhE,KAAMA,EAAMiE,KAAMA,IAD1B,IACoC/D,GAEnCH,EAASoF,OAAS,GAAKlB,GACtB,wBAAIhB,UAAU,iBACXmC,EAAKrF,GAAUU,KAAI,SAAA4E,GAAE,OACpB,kBAAClB,EAAD,eACEE,aAAcA,EACdrF,IAAKqG,EAAGpF,KACRmE,SAAUA,EACVE,SAAUA,GACNe,SASX,SAASC,EAAT,GAAsE,IAAtDvF,EAAqD,EAArDA,SAAUuE,EAA2C,EAA3CA,SAAUF,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,aACnD,OACE,wBAAIpB,UAAU,QACXmC,EAAKrF,GAAUU,KAAI,SAAA4E,GAAE,OACpB,kBAAClB,EAAD,eACEE,aAAcA,EACdrF,IAAKqG,EAAGpF,KACRmE,SAAUA,EACVE,SAAUA,GACNe,QAOd,SAASD,EAAKrF,GACZ,OAAOA,EAASqF,MAAK,SAACtG,EAAGyG,GACvB,MAAe,WAAXzG,EAAEkB,MAAgC,SAAXuF,EAAEvF,MACnB,EAEK,WAAXuF,EAAEvF,MAAgC,SAAXlB,EAAEkB,KACpB,EAELlB,EAAEoB,KAAKsF,cAAgBD,EAAErF,KAAKsF,eACxB,EAEH,K,YErGLC,G,OAAiD,CACrDC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,OACJC,GAAI,SACJC,KAAM,OACNC,IAAK,OACLC,KAAM,OACNC,WAAY,eASP,SAASC,EAAT,GAA8D,IAAxCpE,EAAuC,EAAvCA,SAAUqE,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SACzCC,EAAMvE,EAASwE,MAAM,KAAKC,OAAS,GACzC,OACE,yBAAKvD,UAAU,cACf,kBAAC,aAAD,CACEmD,SAAUA,EACVC,SAAUA,EACVI,SAAUhB,EAAU1D,IAAa0D,EAAUa,GAC3CI,QAAS,CACPC,UAAU,GAEZC,MAAM,OACNrD,OAAO,UAMN,SAASsD,EAAT,GAAqE,IAA7C9G,EAA4C,EAA5CA,SAC7B,OAAO,uBAAGkD,UAAU,gBAAgBlD,GCjC/B,SAAS+G,EAAT,GAAgD,IAC/CtF,ENyDD,YAQH,IAPFH,EAOC,EAPDA,KACAE,EAMC,EANDA,KACAtB,EAKC,EALDA,KAKC,EACuBxB,mBAA2B,MADlD,mBACMC,EADN,KACYC,EADZ,KAoBD,OAlBAC,qBAAU,YACR,qBAAAE,EAAAC,OAAA,kEAAAD,EAAA,MACyB6B,EACrBU,EAAK9C,KAAKD,MACV+C,EAAK9C,KAAK2B,KACVmB,EAAKxB,IACLI,IALJ,cACQmG,EADR,kBAAAtH,EAAA,MAOyB6B,EACrBY,EAAKhD,KAAKD,MACViD,EAAKhD,KAAK2B,KACVqB,EAAK1B,IACLI,IAXJ,OAOQoG,EAPR,OAaE1H,EAAQ,CAAEyH,WAAUC,WAAUtE,SAAU9B,IAb1C,qCAeA8G,KACC,CAAC1F,EAAME,EAAMtB,IACTvB,EMrFMsI,CAAQ,CACnB3F,KAFkD,EAA/BA,KAGnBE,KAHkD,EAAzBA,KAIzBtB,KAJkD,EAAnBmE,WAMjC,OAAI5C,EACK,kBAAC2E,EAAe3E,GAElB,2CChBF,SAASyF,EAAT,GAAuE,IAArD3I,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,KAAMM,EAAuC,EAAvCA,OAAQwD,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YACnD,OACE,yBAAKW,UAAU,OACb,2BACE,uBAAGiE,OAAO,SAASC,IAAI,sBAAsBC,KAAI,6BAAwB9I,EAAxB,YAAiCC,EAAjC,iBAA8CM,IAC5FP,EADH,IACWC,EADX,IACkBM,IAGpB,wBAAIoE,UAAU,eAAeZ,GAC7B,2BACGC,ICCF,SAAS+E,EAAT,GAA0C,IAA3B/I,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,GAAa,EACdC,qBADc,mBACvC2F,EADuC,KAC7BkD,EAD6B,KAExCC,EAAUlJ,EAAWC,EAAOC,EAAMC,GAQxC,OANAI,qBAAU,YACHwF,GAAYmD,GACfD,EAAYC,EAAQ9F,UAAU,GAAGM,YAElC,CAACwF,EAASnD,IAERmD,GAAYnD,EAKf,0BAAMnB,UAAU,gCACd,kBAACH,EAAKK,UAAN,CAAgBF,UAAU,eACxB,kBAACH,EAAKC,MAAN,CAAYC,KAAM,EAAGC,UAAU,iCAC7B,kBAACgE,EAAWM,GACZ,kBAAC,EAAD,eACEnD,SAAUA,EACVE,SAAUgD,EACVjD,aAAckD,EAAQ9F,UAAUhB,KAAI,SAAAkB,GAAC,OAAIA,EAAEI,aACvCwF,EAAQnF,QAGhB,kBAACU,EAAKC,MAAN,CAAYC,KAAM,EAAGC,UAAU,0BAC7B,kBAAC4D,EAAD,KAAezC,GACf,kBAAC0C,EAAD,CAAMzF,KAAMkG,EAAQlG,KAAME,KAAMgG,EAAQhG,KAAM6C,SAAUA,OAjBvD,2CCtBJ,SAASoD,IACd,OACE,0BAAMvE,UAAU,QACd,kD,cCENwE,IAASC,OACP,mBCLK,WACL,IAAMzH,EAAOlC,OAAOC,SAAS2J,SAASpB,MAAM,KAAKqB,QAAO,SAAAC,GAAC,QAAMA,KAE/D,GADAC,QAAQC,IAAI9H,GACQ,IAAhBA,EAAKkF,OACP,OAAO,kBAACqC,EAAD,MAJc,kBAMMvH,EANN,GAMb3B,GANa,WAMNC,EANM,KAMAC,EANA,KAOvB,OAAO,kBAAC6I,EAAD,CAAK/I,MAAOA,EAAOC,KAAMA,EAAMC,GAAIwJ,OAAOxJ,ODFjD,MACAyJ,SAASC,eAAe,SX+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1I,MAAK,SAAA2I,GACjCA,EAAaC,iB","file":"static/js/main.cf0b0d0b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport Octokit from \"@octokit/rest\";\n\nconst client = new Octokit();\n\nexport interface FileDiff {\n  additions: number;\n  changes: number;\n  deletions: number;\n  filename: string;\n  url: string;\n  sha: string;\n  status: string;\n}\n\nexport interface Commit {\n  sha: string;\n  message: string;\n  author: {\n    avatarUrl: string;\n    login: string;\n  };\n}\n\nexport interface Ref {\n  ref: string;\n  sha: string;\n  repo: {\n    owner: string;\n    name: string;\n  };\n}\n\nexport interface PrState {\n  title: string;\n  description: string;\n  owner: string;\n  repo: string;\n  state: string;\n  number: number;\n  diffFiles: FileDiff[];\n  commits: Commit[];\n  root: TreeObject;\n  base: Ref;\n  head: Ref;\n}\n\nexport interface DiffState {\n  original: string;\n  modified: string;\n  filename: string;\n}\n\nexport interface TreeObject {\n  type: \"file\" | \"folder\";\n  name: string;\n  path: string;\n  children: TreeObject[];\n}\n\nexport function usePrState(owner: string, repo: string, pr: number) {\n  const [data, setData] = useState<PrState | null>(null);\n  useEffect(() => {\n    loadPrStateCached(owner, repo, pr).then(setData);\n  }, [owner, repo, pr]);\n  return data;\n}\n\nexport function useDiff({\n  base,\n  head,\n  path\n}: {\n  base: Ref;\n  head: Ref;\n  path: string;\n}) {\n  const [data, setData] = useState<DiffState | null>(null);\n  useEffect(() => {\n    async function run() {\n      const original = await getContentCached(\n        base.repo.owner,\n        base.repo.name,\n        base.ref,\n        path\n      );\n      const modified = await getContentCached(\n        head.repo.owner,\n        head.repo.name,\n        head.ref,\n        path\n      );\n      setData({ original, modified, filename: path });\n    }\n    run();\n  }, [base, head, path]);\n  return data;\n}\n\nasync function loadRoot(\n  owner: string,\n  repo: string,\n  ref: string,\n): Promise<TreeObject> {\n  const children = await getChildren(owner, repo, \"\", ref);\n  return {\n    type: \"folder\",\n    path: \"/\",\n    name: \"/\",\n    children\n  };\n}\n\nasync function getChildren(\n  owner: string,\n  repo: string,\n  path: string,\n  ref: string,\n): Promise<TreeObject[]> {\n  const contents = (await client.repos\n    .getContents({\n      owner,\n      repo,\n      ref,\n      path\n    })\n    .then(r => r.data)) as any;\n  return Promise.all(\n    contents.map(\n      async (c: any): Promise<TreeObject> => {\n        if (c.type === \"dir\") {\n          return {\n            type: \"folder\",\n            name: c.name,\n            path: c.path,\n            children: await getChildren(owner, repo, c.path, ref)\n          };\n        }\n        return {\n          type: \"file\",\n          name: c.name,\n          path: c.path,\n          children: []\n        };\n      }\n    )\n  );\n}\n\nasync function loadPrStateCached(\n  owner: string,\n  repo: string,\n  number: number\n): Promise<PrState> {\n  const version = \"3\";\n  const key = `${owner}.${repo}.${number}.${version}`;\n  const val = localStorage.getItem(key);\n  if (val) {\n    return JSON.parse(val);\n  }\n\n  const state = await loadPrState(owner, repo, number);\n  localStorage.setItem(key, JSON.stringify(state));\n  return state;\n}\n\nasync function getContentCached(\n  owner: string,\n  repo: string,\n  ref: string,\n  path: string\n) {\n  const version = \"3\";\n  const key = `${owner}.${repo}.${ref}.${path}.${version}`;\n  const val = localStorage.getItem(key);\n  if (val) {\n    return val;\n  }\n\n  const content = await getContent(owner, repo, ref, path);\n  localStorage.setItem(key, content);\n  return content;\n}\n\nfunction getContent(owner: string, repo: string, ref: string, path: string) {\n  return client.repos\n    .getContents({\n      owner,\n      repo,\n      ref,\n      path,\n      headers: {\n        accept: \"application/vnd.github.v3.raw\"\n      }\n    })\n    .then(r => r.data) as Promise<string>;\n}\n\nasync function loadPrState(\n  owner: string,\n  repo: string,\n  number: number\n): Promise<PrState> {\n  const pull = await client.pulls\n    .get({\n      owner,\n      repo,\n      pull_number: number\n    })\n    .then(r => r.data);\n  const diff = await client.repos\n    .compareCommits({\n      owner,\n      repo,\n      base: `${pull.base.repo.owner.login}:${pull.base.ref}`,\n      head: `${pull.head.repo.owner.login}:${pull.head.ref}`\n    })\n    .then(r => r.data);\n  const diffFiles = diff.files.map(f => ({\n    additions: f.additions,\n    changes: f.changes,\n    deletions: f.deletions,\n    filename: f.filename,\n    url: f.raw_url,\n    sha: f.sha,\n    status: f.status\n  }));\n  const root = await loadRoot(pull.head.repo.owner.login, pull.head.repo.name, pull.head.ref);\n\n  return {\n    title: pull.title,\n    description: pull.body,\n    state: pull.state,\n    number: pull.number,\n    owner,\n    repo,\n    root,\n    base: {\n      repo: {\n        owner: pull.base.repo.owner.login,\n        name: pull.base.repo.name\n      },\n      ref: pull.base.ref,\n      sha: pull.base.sha\n    },\n    head: {\n      repo: {\n        owner: pull.head.repo.owner.login,\n        name: pull.head.repo.name\n      },\n      ref: pull.head.ref,\n      sha: pull.head.sha\n    },\n    diffFiles,\n    commits: diff.commits.map(c => ({\n      sha: c.sha,\n      message: c.commit.message,\n      author: {\n        login: c.author.login,\n        avatarUrl: c.author.avatar_url\n      }\n    }))\n  };\n}\n","import React from \"react\";\n\nexport function Container({\n  children,\n  className\n}: {\n  className?: string;\n  children?: React.ReactNode;\n}) {\n  return (\n    <div className={`Flex-Container ${className}`} style={{ display: \"flex\" }}>\n      {children}\n    </div>\n  );\n}\n\nexport function Child({\n  flex,\n  className,\n  children\n}: {\n  flex: number;\n  className?: string;\n  children?: React.ReactNode;\n}) {\n  return (\n    <div className={`Flex-Child ${className}`} style={{ flex }}>\n      {children}\n    </div>\n  );\n}\n\nexport const Flex = {\n  Child,\n  Container\n};\n","import React from \"react\";\n\nexport function Right() {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      className=\"octicon octicon-chevron-right\"\n      viewBox=\"0 0 8 16\"\n      version=\"1.1\"\n      aria-hidden=\"true\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.5 8l-5 5L1 11.5 4.75 8 1 4.5 2.5 3l5 5z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport function Down() {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      className=\"octicon octicon-chevron-down\"\n      viewBox=\"0 0 10 16\"\n      version=\"1.1\"\n      aria-hidden=\"true\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5 11L0 6l1.5-1.5L5 8.25 8.5 4.5 10 6l-5 5z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport function File() {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      className=\"octicon octicon-file\"\n      viewBox=\"0 0 12 16\"\n      version=\"1.1\"\n      aria-hidden=\"true\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6 5H2V4h4v1zM2 8h7V7H2v1zm0 2h7V9H2v1zm0 2h7v-1H2v1zm10-7.5V14c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h7.5L12 4.5zM11 5L8 2H1v12h10V5z\"\n      ></path>\n    </svg>\n  );\n}\n","import React from \"react\";\nimport { TreeObject } from \"../state/github\";\nimport { useToggle } from \"../state/util\";\nimport { File, Down, Right } from \"../icons\";\n\nimport \"./Tree.css\";\n\ninterface Props extends TreeObject {\n  changedFiles: string[];\n  selected: string | null;\n  onSelect: (path: string) => void;\n}\n\nfunction Icon({ type, open }: { type: \"file\" | \"folder\"; open: boolean }) {\n  if (type === \"file\") {\n    return <File />;\n  } else {\n    if (open) {\n      return <Down />;\n    } else {\n      return <Right />;\n    }\n  }\n}\n\nfunction TreeSelectedLine() {\n  return <div className=\"Tree-SelectedLine\"></div>;\n}\n\nfunction TreeItem({\n  name,\n  children,\n  type,\n  path,\n  selected,\n  changedFiles,\n  onSelect\n}: Props) {\n  const [open, toggleOpen] = useToggle();\n  const active = selected === path;\n\n  const changed =\n    type === \"folder\"\n      ? changedFiles.find(f => f.startsWith(path))\n      : changedFiles.includes(path);\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    e.stopPropagation();\n    if (type === \"folder\") toggleOpen();\n    if (type === \"file\") onSelect(path);\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={`Tree-Item } ${\n        active ? \"Tree-selected text-white\" : \"\"\n      }`}\n    >\n      {active && <TreeSelectedLine />}\n      <span className={changed ? \"Tree-changed text-green\" : \"\"}>\n        <Icon type={type} open={open} /> {name}\n      </span>\n      {children.length > 0 && open && (\n        <ul className=\"Tree-Children\">\n          {sort(children).map(el => (\n            <TreeItem\n              changedFiles={changedFiles}\n              key={el.path}\n              selected={selected}\n              onSelect={onSelect}\n              {...el}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n}\n\nexport function Tree({ children, onSelect, selected, changedFiles }: Props) {\n  return (\n    <ul className=\"Tree\">\n      {sort(children).map(el => (\n        <TreeItem\n          changedFiles={changedFiles}\n          key={el.path}\n          selected={selected}\n          onSelect={onSelect}\n          {...el}\n        />\n      ))}\n    </ul>\n  );\n}\n\nfunction sort(children: TreeObject[]) {\n  return children.sort((a, b) => {\n    if (a.type === \"folder\" && b.type === \"file\") {\n      return -1;\n    }\n    if (b.type === \"folder\" && a.type === \"file\") {\n      return 1;\n    }\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n      return -1;\n    }\n    return 1;\n  });\n}\n","import { useState } from \"react\";\n\nexport function useToggle(): [boolean, () => void] {\n  const [toggle, setToggle] = useState(false);\n  function handleToggle() {\n    setToggle(!toggle);\n  }\n  return [toggle, handleToggle];\n}\n","import React from \"react\";\nimport { DiffEditor as MonacoDiffEditor } from \"@monaco-editor/react\";\n\nimport \"./Editor.css\";\n\n// TODO: Use default vscode way.\nconst languages: { [k: string]: string | undefined } = {\n  js: \"javascript\",\n  ts: \"typescript\",\n  md: \"markdown\",\n  rb: \"ruby\",\n  py: \"python\",\n  json: \"json\",\n  yml: \"yaml\",\n  yaml: \"yaml\",\n  Dockerfile: \"dockerfile\"\n};\n\nexport interface Props {\n  filename: string;\n  original: string;\n  modified: string;\n}\n\nexport function DiffEditor({ filename, original, modified }: Props) {\n  const ext = filename.split(\".\").pop() || \"\";\n  return (\n    <div className=\"DiffEditor\">\n    <MonacoDiffEditor\n      original={original}\n      modified={modified}\n      language={languages[filename] || languages[ext]}\n      options={{\n        readOnly: true\n      }}\n      theme=\"dark\"\n      height=\"100%\"\n    />\n    </div>\n  );\n}\n\nexport function EditorHeader({ children }: { children?: React.ReactNode }) {\n  return <p className=\"EditorHeader\">{children}</p>;\n}\n","import React from \"react\";\nimport { useDiff, Ref } from \"../state/github\";\nimport { DiffEditor } from \"./Editor\";\n\nexport interface Props {\n  base: Ref;\n  head: Ref;\n  selected: string;\n}\n\nexport function Diff({ base, head, selected }: Props) {\n  const diff = useDiff({\n    base: base,\n    head: head,\n    path: selected\n  });\n  if (diff) {\n    return <DiffEditor {...diff} />;\n  }\n  return <div>Loading...</div>;\n}\n","import React from \"react\";\nimport { PrState } from \"../state/github\";\n\nexport function PrBody({ owner, repo, number, title, description }: PrState) {\n  return (\n    <div className=\"p-1\">\n      <p>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/${owner}/${repo}/pull/${number}`}>\n          {owner}/{repo}#{number}\n        </a>\n      </p>\n      <h3 className=\"text-center\">{title}</h3>\n      <p>\n        {description}\n      </p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { usePrState } from \"../state/github\";\nimport { Flex } from \"./Flex\";\nimport { Tree } from \"./Tree\";\nimport { Diff } from \"./Diff\";\nimport { EditorHeader } from \"./Editor\";\nimport { PrBody } from \"./Pr\";\n\nexport interface Props {\n  owner: string;\n  repo: string;\n  pr: number;\n}\n\nexport function App({ owner, repo, pr }: Props) {\n  const [selected, setSelected] = useState<string>();\n  const prState = usePrState(owner, repo, pr);\n\n  useEffect(() => {\n    if (!selected && prState) {\n      setSelected(prState.diffFiles[0].filename);\n    }\n  }, [prState, selected]);\n\n  if (!prState || !selected) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <main className=\"App bg-secondary full-height\">\n      <Flex.Container className=\"full-height\">\n        <Flex.Child flex={1} className=\"position-relative full-height\">\n          <PrBody {...prState} />\n          <Tree\n            selected={selected}\n            onSelect={setSelected}\n            changedFiles={prState.diffFiles.map(f => f.filename)}\n            {...prState.root}\n          />\n        </Flex.Child>\n        <Flex.Child flex={5} className=\"bg-primary full-height\">\n          <EditorHeader>{selected}</EditorHeader>\n          <Diff base={prState.base} head={prState.head} selected={selected} />\n        </Flex.Child>\n      </Flex.Container>\n    </main>\n  );\n}\n","import React from \"react\";\n\n\nexport function Info() {\n  return (\n    <main className=\"Info\">\n      <h1>Develop your PR's</h1>\n    </main>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"./components/Router\";\n\nimport \"normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Router />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { App } from \"./App\";\nimport { Info } from \"./Info\";\n\nexport function Router() {\n  const path = window.location.pathname.split(\"/\").filter(s => !!s);\n  console.log(path)\n  if (path.length !== 4) {\n    return <Info />\n  }\n  const [_, owner, repo, pr] = path;\n  return <App owner={owner} repo={repo} pr={Number(pr)} />;\n}\n"],"sourceRoot":""}